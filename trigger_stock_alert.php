<?php

require_once 'vendor/autoload.php';

$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "=== SIMULATION SIMPLE POUR D√âCLENCHER ALERTE CRITIQUE ===" . PHP_EOL . PHP_EOL;

// R√©cup√©rer le produit pommes vertes bio
$product = \App\Models\Product::where('name', 'like', '%pommes%')->where('name', 'like', '%bio%')->first();

if (!$product) {
    echo "‚ùå Produit pommes vertes bio non trouv√© !" . PHP_EOL;
    exit;
}

echo "üì¶ √âTAT INITIAL DU STOCK" . PHP_EOL;
echo "Produit: " . $product->name . PHP_EOL;
echo "Stock actuel: " . $product->quantity . PHP_EOL;
echo "Seuil critique: " . $product->critical_threshold . PHP_EOL;
echo "Seuil stock bas: " . ($product->low_stock_threshold ?? 'Non d√©fini') . PHP_EOL;
echo PHP_EOL;

// Calculer la nouvelle quantit√© pour d√©clencher l'alerte critique
$currentStock = $product->quantity;
$criticalThreshold = $product->critical_threshold;
$newStock = $criticalThreshold - 5; // 5 unit√©s en dessous du seuil critique

echo "üõí SIMULATION DE VENTE" . PHP_EOL;
echo "Quantit√© vendue: " . ($currentStock - $newStock) . " kg" . PHP_EOL;
echo "Nouveau stock: " . $newStock . " kg" . PHP_EOL;
echo "Statut pr√©vu: " . ($newStock < $criticalThreshold ? "üö® CRITIQUE" : "‚úÖ Normal") . PHP_EOL;
echo PHP_EOL;

// Mettre √† jour le stock
echo "üîÑ MISE √Ä JOUR DU STOCK..." . PHP_EOL;
$product->update(['quantity' => $newStock]);
echo "‚úÖ Stock mis √† jour" . PHP_EOL . PHP_EOL;

// V√©rifier l'√©tat final
$product = $product->fresh();
echo "üìä √âTAT FINAL DU STOCK" . PHP_EOL;
echo "Stock actuel: " . $product->quantity . PHP_EOL;
echo "Seuil critique: " . $product->critical_threshold . PHP_EOL;

$status = '';
if ($product->quantity == 0) {
    $status = "üî¥ RUPTURE DE STOCK";
} elseif ($product->quantity <= $product->critical_threshold) {
    $status = "üö® STOCK CRITIQUE";
} elseif ($product->low_stock_threshold && $product->quantity <= $product->low_stock_threshold) {
    $status = "‚ö†Ô∏è STOCK BAS";
} else {
    $status = "‚úÖ STOCK NORMAL";
}

echo "Statut: " . $status . PHP_EOL . PHP_EOL;

// Cr√©er manuellement une alerte de stock
if ($product->quantity <= $product->critical_threshold) {
    echo "üö® CR√âATION D'ALERTE MANUELLE..." . PHP_EOL;
    
    // R√©cup√©rer Mr Clank (utilisateur syst√®me)
    $mrClank = \App\Models\User::where('email', 'system@farmshop.local')->first();
    if (!$mrClank) {
        // Fallback sur le premier admin si Mr Clank n'existe pas
        $mrClank = \App\Models\User::where('role', 'Admin')->first();
    }
    
    try {
        $alert = \App\Models\Message::create([
            'user_id' => $mrClank->id, // Destinataire (admin qui recevra l'alerte)
            'sender_id' => $mrClank->id, // Exp√©diteur : Mr Clank (syst√®me)
            'type' => 'stock_alert',
            'subject' => 'Stock Critique - ' . $product->name,
            'content' => "Le stock du produit '{$product->name}' est critique. Stock actuel: {$product->quantity} (seuil: {$product->critical_threshold})",
            'metadata' => json_encode([
                'product_id' => $product->id,
                'product_name' => $product->name,
                'current_stock' => $product->quantity,
                'critical_threshold' => $product->critical_threshold,
                'alert_type' => 'critical_stock',
                'automated_message' => true, // Marquer comme message automatique
                'system_sender' => true
            ]),
            'status' => 'unread',
            'priority' => 'high',
            'is_important' => true
        ]);
        
        echo "‚úÖ Alerte cr√©√©e (ID: " . $alert->id . ") - Exp√©diteur: " . $mrClank->name . PHP_EOL;
    } catch (Exception $e) {
        echo "‚ùå Erreur lors de la cr√©ation de l'alerte: " . $e->getMessage() . PHP_EOL;
    }
}

// V√©rifier les alertes r√©centes
echo PHP_EOL . "üîç V√âRIFICATION DES ALERTES" . PHP_EOL;
$alerts = \App\Models\Message::where('type', 'stock_alert')
    ->where('created_at', '>=', now()->subMinutes(5))
    ->orderBy('created_at', 'desc')
    ->get();

if ($alerts->count() > 0) {
    echo "‚úÖ " . $alerts->count() . " alerte(s) trouv√©e(s):" . PHP_EOL;
    foreach ($alerts as $alert) {
        echo "  - " . $alert->title . PHP_EOL;
        echo "    Contenu: " . $alert->content . PHP_EOL;
        echo "    Cr√©√©e √†: " . $alert->created_at->format('d/m/Y H:i:s') . PHP_EOL;
        echo "    Priorit√©: " . $alert->priority . PHP_EOL . PHP_EOL;
    }
} else {
    echo "‚ö†Ô∏è Aucune alerte trouv√©e dans les 5 derni√®res minutes" . PHP_EOL;
}

echo "üéØ SIMULATION TERMIN√âE!" . PHP_EOL;
echo "‚ú® Consultez maintenant la section 'Gestion de Stock' dans l'admin pour voir l'alerte !" . PHP_EOL;
echo "üåê URL: http://localhost:8000/admin/stock/alerts" . PHP_EOL;
