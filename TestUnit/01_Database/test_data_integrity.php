<?php
/**
 * TEST #5 : V√©rification de l'int√©grit√© des donn√©es
 */

require_once __DIR__ . '/../../vendor/autoload.php';
$dotenv = \Dotenv\Dotenv::createImmutable(__DIR__ . '/../..');
$dotenv->load();

echo "=== TEST DATA INTEGRITY ===\n\n";

try {
    $pdo = new \PDO(
        'mysql:host=' . ($_ENV['DB_HOST'] ?? '127.0.0.1') . ';port=' . ($_ENV['DB_PORT'] ?? '3306') . ';dbname=' . ($_ENV['DB_DATABASE'] ?? 'farmshop'),
        $_ENV['DB_USERNAME'] ?? 'root',
        $_ENV['DB_PASSWORD'] ?? ''
    );
    $pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);
    
    $issues = 0;
    
    // Test 1: Enregistrements orphelins dans order_items
    echo "üìä Test 1: V√©rification des enregistrements orphelins...\n";
    $stmt = $pdo->query("
        SELECT COUNT(*) as count 
        FROM order_items oi 
        LEFT JOIN orders o ON oi.order_id = o.id 
        WHERE o.id IS NULL
    ");
    $orphans = $stmt->fetch(\PDO::FETCH_ASSOC)['count'];
    
    if ($orphans > 0) {
        echo "  ‚ö†Ô∏è  $orphans order_items orphelins trouv√©s\n";
        $issues++;
    } else {
        echo "  ‚úÖ Aucun order_item orphelin\n";
    }
    
    // Test 2: Produits avec quantit√© n√©gative
    echo "\nüìä Test 2: V√©rification des quantit√©s n√©gatives...\n";
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM products WHERE quantity < 0");
    $negative = $stmt->fetch(\PDO::FETCH_ASSOC)['count'];
    
    if ($negative > 0) {
        echo "  ‚ö†Ô∏è  $negative produits avec quantit√© n√©gative\n";
        $issues++;
    } else {
        echo "  ‚úÖ Aucune quantit√© n√©gative\n";
    }
    
    // Test 3: Prix n√©gatifs
    echo "\nüìä Test 3: V√©rification des prix n√©gatifs...\n";
    $stmt = $pdo->query("SELECT COUNT(*) as count FROM products WHERE price < 0");
    $negativePrice = $stmt->fetch(\PDO::FETCH_ASSOC)['count'];
    
    if ($negativePrice > 0) {
        echo "  ‚ö†Ô∏è  $negativePrice produits avec prix n√©gatif\n";
        $issues++;
    } else {
        echo "  ‚úÖ Aucun prix n√©gatif\n";
    }
    
    // Test 4: Utilisateurs avec email dupliqu√©
    echo "\nüìä Test 4: V√©rification des emails dupliqu√©s...\n";
    $stmt = $pdo->query("
        SELECT email, COUNT(*) as count 
        FROM users 
        GROUP BY email 
        HAVING count > 1
    ");
    $duplicates = $stmt->fetchAll(\PDO::FETCH_ASSOC);
    
    if (!empty($duplicates)) {
        echo "  ‚ö†Ô∏è  " . count($duplicates) . " emails dupliqu√©s trouv√©s\n";
        $issues++;
    } else {
        echo "  ‚úÖ Aucun email dupliqu√©\n";
    }
    
    echo "\n=== R√âSUM√â ===\n";
    echo "üìä Probl√®mes trouv√©s: $issues\n";
    
    if ($issues === 0) {
        echo "TEST R√âUSSI ‚úÖ\n";
    } else {
        echo "TEST AVEC AVERTISSEMENTS ‚ö†Ô∏è\n";
    }
    
} catch (\PDOException $e) {
    echo "‚ùå ERREUR: " . $e->getMessage() . "\n";
    echo "TEST √âCHOU√â ‚ùå\n";
}
