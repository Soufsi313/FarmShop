<?php

require_once 'vendor/autoload.php';

$app = require_once 'bootstrap/app.php';
$app->make('Illuminate\Contracts\Console\Kernel')->bootstrap();

echo "=== SIMULATION RUPTURE DE STOCK - CHAUSSURES DE S√âCURIT√â ===" . PHP_EOL . PHP_EOL;

// R√©cup√©rer le produit chaussures de s√©curit√© en cuir
$product = \App\Models\Product::where('name', 'like', '%chaussures%')->where('name', 'like', '%s√©curit√©%')->where('name', 'like', '%cuir%')->first();

if (!$product) {
    echo "‚ùå Produit chaussures de s√©curit√© en cuir non trouv√© !" . PHP_EOL;
    exit;
}

echo "üë¢ √âTAT INITIAL DU STOCK" . PHP_EOL;
echo "Produit: " . $product->name . PHP_EOL;
echo "Stock actuel: " . $product->quantity . PHP_EOL;
echo "Seuil critique: " . $product->critical_threshold . PHP_EOL;
echo "Prix: " . $product->price . "‚Ç¨" . PHP_EOL;
echo PHP_EOL;

echo "üõí SIMULATION DE VENTE COMPL√àTE" . PHP_EOL;
echo "Quantit√© vendue: " . $product->quantity . " paires" . PHP_EOL;
echo "Nouveau stock: 0 paires" . PHP_EOL;
echo "Statut pr√©vu: üî¥ RUPTURE DE STOCK" . PHP_EOL;
echo PHP_EOL;

// Mettre √† jour le stock √† 0
echo "üîÑ MISE √Ä JOUR DU STOCK..." . PHP_EOL;
$product->update(['quantity' => 0]);
echo "‚úÖ Stock mis √† jour" . PHP_EOL . PHP_EOL;

// V√©rifier l'√©tat final
$product = $product->fresh();
echo "üìä √âTAT FINAL DU STOCK" . PHP_EOL;
echo "Stock actuel: " . $product->quantity . PHP_EOL;
echo "Seuil critique: " . $product->critical_threshold . PHP_EOL;

$status = '';
if ($product->quantity == 0) {
    $status = "üî¥ RUPTURE DE STOCK";
} elseif ($product->quantity <= $product->critical_threshold) {
    $status = "üö® STOCK CRITIQUE";
} elseif ($product->low_stock_threshold && $product->quantity <= $product->low_stock_threshold) {
    $status = "‚ö†Ô∏è STOCK BAS";
} else {
    $status = "‚úÖ STOCK NORMAL";
}

echo "Statut: " . $status . PHP_EOL . PHP_EOL;

// Cr√©er une alerte de rupture de stock avec Mr Clank
echo "üö® CR√âATION D'ALERTE DE RUPTURE DE STOCK..." . PHP_EOL;

// R√©cup√©rer Mr Clank (utilisateur syst√®me)
$mrClank = \App\Models\User::where('email', 'system@farmshop.local')->first();
if (!$mrClank) {
    echo "‚ö†Ô∏è Mr Clank non trouv√©, utilisation d'un admin..." . PHP_EOL;
    $mrClank = \App\Models\User::where('role', 'Admin')->first();
}

// R√©cup√©rer un admin destinataire
$admin = \App\Models\User::where('role', 'Admin')->where('id', '!=', $mrClank->id)->first();
if (!$admin) {
    $admin = \App\Models\User::first(); // Fallback
}

try {
    $alert = \App\Models\Message::create([
        'user_id' => $admin->id, // Destinataire (admin qui recevra l'alerte)
        'sender_id' => $mrClank->id, // Exp√©diteur : Mr Clank (syst√®me)
        'type' => 'stock_alert',
        'subject' => 'üî¥ RUPTURE DE STOCK - ' . $product->name,
        'content' => "ALERTE URGENTE ! Le produit '{$product->name}' est en rupture de stock compl√®te.\n\n" .
                    "üìä D√©tails :\n" .
                    "‚Ä¢ Stock actuel : {$product->quantity} unit√©s\n" .
                    "‚Ä¢ Seuil critique : {$product->critical_threshold} unit√©s\n" .
                    "‚Ä¢ Prix unitaire : {$product->price}‚Ç¨\n\n" .
                    "‚ö° ACTION REQUISE :\n" .
                    "R√©approvisionnement imm√©diat n√©cessaire pour √©viter toute perte de vente.\n\n" .
                    "Ce message a √©t√© g√©n√©r√© automatiquement par le syst√®me de gestion de stock.",
        'metadata' => json_encode([
            'product_id' => $product->id,
            'product_name' => $product->name,
            'current_stock' => $product->quantity,
            'critical_threshold' => $product->critical_threshold,
            'alert_type' => 'out_of_stock',
            'severity' => 'critical',
            'automated_message' => true,
            'system_sender' => true,
            'product_price' => $product->price,
            'category' => $product->category->name ?? 'Non cat√©goris√©',
            'created_by_system' => 'Mr Clank',
            'requires_immediate_action' => true
        ]),
        'status' => 'unread',
        'priority' => 'high',
        'is_important' => true
    ]);
    
    echo "‚úÖ Alerte de rupture cr√©√©e (ID: " . $alert->id . ")" . PHP_EOL;
    echo "üìß Exp√©diteur: " . $mrClank->name . PHP_EOL;
    echo "üì• Destinataire: " . $admin->name . PHP_EOL;
} catch (Exception $e) {
    echo "‚ùå Erreur lors de la cr√©ation de l'alerte: " . $e->getMessage() . PHP_EOL;
}

// V√©rifier les alertes r√©centes
echo PHP_EOL . "üîç V√âRIFICATION DES ALERTES" . PHP_EOL;
$alerts = \App\Models\Message::where('type', 'stock_alert')
    ->where('created_at', '>=', now()->subMinutes(5))
    ->orderBy('created_at', 'desc')
    ->get();

if ($alerts->count() > 0) {
    echo "‚úÖ " . $alerts->count() . " alerte(s) r√©cente(s):" . PHP_EOL;
    foreach ($alerts as $alert) {
        echo "  - " . $alert->subject . PHP_EOL;
        echo "    Priorit√©: " . $alert->priority . PHP_EOL;
        echo "    Cr√©√©e √†: " . $alert->created_at->format('d/m/Y H:i:s') . PHP_EOL;
        echo "    Exp√©diteur: " . ($alert->sender ? $alert->sender->name : 'Syst√®me') . PHP_EOL . PHP_EOL;
    }
} else {
    echo "‚ö†Ô∏è Aucune alerte trouv√©e dans les 5 derni√®res minutes" . PHP_EOL;
}

echo "üéØ SIMULATION DE RUPTURE TERMIN√âE!" . PHP_EOL;
echo "‚ú® Consultez maintenant la section 'Gestion de Stock' dans l'admin !" . PHP_EOL;
echo "üåê URLs √† v√©rifier :" . PHP_EOL;
echo "   - Vue d'ensemble : http://localhost:8000/admin/stock" . PHP_EOL;
echo "   - Alertes : http://localhost:8000/admin/stock/alerts" . PHP_EOL;
echo "   - Messages : http://localhost:8000/admin/messages" . PHP_EOL;
